<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C#笔记</title>
      <link href="/2021/08/20/c-bi-ji/"/>
      <url>/2021/08/20/c-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>Action参数回调<br>Action<TResult> callback代表callback回调方法是带有一个TResult类型的参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"> private LeanCloudRestAPI _leanCloud;</span><br><span class="line"> </span><br><span class="line"> StartCoroutine(_leanCloud.Create(&quot;GameScore&quot;, JsonUtility.ToJson(gameScore, false), ShowRankPanel));</span><br><span class="line"></span><br><span class="line">StartCoroutine(_leanCloud.Query(&quot;GameScore&quot;, param, t =&gt;</span><br><span class="line">        &#123;参数是t</span><br><span class="line">            var results = JsonUtility.FromJson&lt;QueryRankResult&gt;(t);</span><br><span class="line">            var scores = new List&lt;KeyValuePair&lt;string, string&gt;&gt;();</span><br><span class="line"></span><br><span class="line">            //将数据转化为字符串</span><br><span class="line">            foreach (var result in results.results)</span><br><span class="line">            &#123;</span><br><span class="line">                scores.Add(</span><br><span class="line">                    new KeyValuePair&lt;string, string&gt;(result.playerName, result.score.ToString()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> public IEnumerator Create(string className, string json, Action calback)</span><br><span class="line">    &#123;</span><br><span class="line">        var url = _baseUrl + &quot;/1.1/classes/&quot; + className;</span><br><span class="line">        using (var www = UnityWebRequest.Put(url, json))</span><br><span class="line">        &#123;</span><br><span class="line">            // Unity UnityWebRequest BUG </span><br><span class="line">            // see:https://forum.unity.com/threads/unitywebrequest-post-url-jsondata-sending-broken-json.414708/</span><br><span class="line">            www.method = &quot;POST&quot;;</span><br><span class="line"></span><br><span class="line">            www.SetRequestHeader(&quot;Content-Type&quot;, &quot;application/json&quot;);</span><br><span class="line">            www.SetRequestHeader(&quot;X-LC-Id&quot;, AppId);</span><br><span class="line">            www.SetRequestHeader(&quot;X-LC-Key&quot;, AppKey);</span><br><span class="line">            yield return www.SendWebRequest();</span><br><span class="line"></span><br><span class="line">            if (www.isNetworkError || www.isHttpError)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(www.downloadHandler.text);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                calback();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">public IEnumerator Query(string className, Dictionary&lt;string, object&gt; parameters, Action&lt;string&gt; calback)</span><br><span class="line">    &#123;</span><br><span class="line">        var url = _baseUrl + &quot;/1.1/classes/&quot; + className + &quot;?&quot;;</span><br><span class="line">        var i = 0;</span><br><span class="line">        foreach (var o in parameters)</span><br><span class="line">        &#123;</span><br><span class="line">            if (i != 0)</span><br><span class="line">                url += &quot;&amp;&quot;;</span><br><span class="line">            url += o.Key + &quot;=&quot; + o.Value;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        using (var www = UnityWebRequest.Get(url))</span><br><span class="line">        &#123;</span><br><span class="line">            www.SetRequestHeader(&quot;X-LC-Id&quot;, AppId);</span><br><span class="line">            www.SetRequestHeader(&quot;X-LC-Key&quot;, AppKey);</span><br><span class="line">            yield return www.SendWebRequest();</span><br><span class="line">            if (www.isNetworkError || www.isHttpError)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(www.downloadHandler.text);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                calback(www.downloadHandler.text);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 游戏开发 </category>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git代码提交相关</title>
      <link href="/2021/08/20/git-cuo-wu-ti-jiao-xiang-guan/"/>
      <url>/2021/08/20/git-cuo-wu-ti-jiao-xiang-guan/</url>
      
        <content type="html"><![CDATA[<p>假如你git commit了一堆代码，但是你发现本次Commit的描述信息有点随意，你可以这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend -m“新的提交消息”</span><br></pre></td></tr></table></figure><p>你本来打算Commit五个文件，但是由于疏忽你Commit了四个。当然你可以再Commit一次来进行弥补这个失误。但是多了一次Commit，按道理它们应该在一次Commit中。git commit –amend也能帮你解决这个问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add 忘记提交的文件 </span><br><span class="line">git commit --amend --no-edit</span><br></pre></td></tr></table></figure><p>提交错了想撤回本次提交，无论是撤回远程的还是本地的，你可以使用git reset搞定，如下面这个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line"># 最新的</span><br><span class="line">commit e49850be48f25d58b977b778d59c48a41e482bb4 (HEAD -&gt; master)</span><br><span class="line">Author: felord.cn &lt;dax@felord.cn&gt;</span><br><span class="line">Date:   Sun Nov 1 23:39:33 2020 +0800</span><br><span class="line"></span><br><span class="line">    &#x27;readme&#x27;</span><br><span class="line"># 次新的</span><br><span class="line">commit 8e7089f62ad8588f5710f23d6a8ce1158490032b (origin/master, origin/HEAD)</span><br><span class="line">Author: felord.cn &lt;dax@felord.cn&gt;</span><br><span class="line">Date:   Sun Nov 1 22:06:21 2020 +0800</span><br></pre></td></tr></table></figure><p>通过git log我们查询获得了最新的两次提交，但是最新的提交e49850be48f25d58b977b778d59c48a41e482bb4 我们想撤回，也就是把最新的提交移动到第二个上面。我们只需要执行 git reset –soft 目标提交commitId ，上述例子中的commitId=8e7089f62ad8588f5710f23d6a8ce1158490032b 。</p><p>git reset有四种模式 soft、mixed、hard、keep<br><img "" class="lazyload placeholder" data-original="/img/gitreset.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="gitreset"><br>git revert 也能实现，区别在于revert会产生一次Commit，需要填写提交信息。</p><p>代码已经推送到远程服务器了，我想撤回某个文件，你可以这么操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看文件历史版本</span><br><span class="line">git log &lt;filename&gt;</span><br><span class="line"># 回滚到指定commitId</span><br><span class="line">git checkout &lt;commitId&gt; &lt;filename&gt;</span><br><span class="line"># 提交被修改的文件</span><br><span class="line">git commit -m &#x27;回滚特定文件的变动&#x27;</span><br><span class="line"># 推送</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 版本控制 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea崩溃</title>
      <link href="/2021/08/20/idea-beng-kui-bao-cuo/"/>
      <url>/2021/08/20/idea-beng-kui-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>报错信息<img "" class="lazyload placeholder" data-original="/img/idea%E5%B4%A9%E6%BA%83%E6%8A%A5%E9%94%99.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="idea崩溃"></p><p>网上找了很多方法都不行<br>最后发现是插件的问题<br>找到插件目录{C:\Users\xcx\AppData\Roaming\JetBrains\IntelliJIdea2020.3\plugins}<br>把里面安装的插件删掉就可以了</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
          <category> Jetbrains </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jetbrains </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity链接</title>
      <link href="/2021/08/18/unity-xiang-guan-lian-jie/"/>
      <url>/2021/08/18/unity-xiang-guan-lian-jie/</url>
      
        <content type="html"><![CDATA[<div class="note info"><p>PUN中文翻译文档可以联系我获取哦</p></div><h2 class="bamboo-h " id="插件相关">插件相关</h2><br/><div class="link-group"><div class="tagLink"><a class="link-card" title="PUN联机小教程" href="https://blog.csdn.net/weixin_38239050/category_9259130.html"><span class="link-card-backdrop" style="background-image: url(https://assetstore-cdn-china-v1.unitychina.cn/key-image/fb473d32-4ded-4188-9ed9-76e77b4072bc.webp)"></span><div class="left"><img "" class="lazyload placeholder" data-original="https://assetstore-cdn-china-v1.unitychina.cn/key-image/fb473d32-4ded-4188-9ed9-76e77b4072bc.webp" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="right"><p class="text">PUN联机小教程</p><p class="url">https://blog.csdn.net/weixin_38239050/category_9259130.html</p></div></a></div></div><h2 class="bamboo-h " id="Shader相关">Shader相关</h2><br/><div class="link-group"><div class="tagLink"><a class="link-card" title="卡通渲染" href="https://github.com/Delt06/urp-toon-shader"><span class="link-card-backdrop" style="background-image: url(https://github.com/Delt06/urp-toon-shader/raw/master/Showcase/main.png)"></span><div class="left"><img "" class="lazyload placeholder" data-original="https://github.com/Delt06/urp-toon-shader/raw/master/Showcase/main.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="right"><p class="text">卡通渲染</p><p class="url">https://github.com/Delt06/urp-toon-shader</p></div></a></div><div class="tagLink"><a class="link-card" title="Unity Shader Graph + URP 实现边缘外发光" href="https://b23.tv/ZlZoKl?share_medium=android&share_source=qq&bbid=XXD845ED93109FF468FE8E41F304D98A7F625&ts=1629282235981"><span class="link-card-backdrop" style="background-image: url(https://i0.hdslb.com/bfs/face/member/noface.jpg@96w_96h_1c_1s.webp)"></span><div class="left"><img "" class="lazyload placeholder" data-original="https://i0.hdslb.com/bfs/face/member/noface.jpg@96w_96h_1c_1s.webp" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="right"><p class="text">Unity Shader Graph + URP 实现边缘外发光</p><p class="url">https://b23.tv/ZlZoKl?share_medium=android&share_source=qq&bbid=XXD845ED93109FF468FE8E41F304D98A7F625&ts=1629282235981</p></div></a></div></div><h2 class="bamboo-h " id="卡通渲染汇总">卡通渲染汇总</h2><br/><div class="site-card-group"><a class="site-card" href="https://github.com/ChiliMilk/URP_Toon"><div class="img"><img "" class="lazyload placeholder" data-original="https://github.com/Delt06/urp-toon-shader/raw/master/Showcase/main.pnghttps://github.com/ChiliMilk/URP_Toon/raw/master/image/UnityChan.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="info"><img "" class="lazyload placeholder" data-original="https://sh-xcx-blog.oss-cn-shanghai.aliyuncs.com/github-logo.jpeg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/><span class="title">卡通渲染</span><span class="desc">github</span></div></a><a class="site-card" href="https://github.com/chrisloop/URP2020ToonShader"><div class="img"><img "" class="lazyload placeholder" data-original="https://github.com/chrisloop/URP2020ToonShader/raw/main/pic.PNG" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="info"><img "" class="lazyload placeholder" data-original="https://sh-xcx-blog.oss-cn-shanghai.aliyuncs.com/github-logo.jpeg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/><span class="title">卡通渲染</span><span class="desc">github</span></div></a><a class="site-card" href="https://github.com/chrisloop/URP2020ToonShader2"><div class="img"><img "" class="lazyload placeholder" data-original="https://github.com/chrisloop/URP2020ToonShader2/raw/main/pic.PNG" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="info"><img "" class="lazyload placeholder" data-original="https://sh-xcx-blog.oss-cn-shanghai.aliyuncs.com/github-logo.jpeg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/><span class="title">卡通渲染</span><span class="desc">github</span></div></a><a class="site-card" href="https://github.com/chrisloop/URPToonShader2"><div class="img"><img "" class="lazyload placeholder" data-original="https://github.com/chrisloop/URPToonShader2/raw/main/pic.PNG" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="info"><img "" class="lazyload placeholder" data-original="https://sh-xcx-blog.oss-cn-shanghai.aliyuncs.com/github-logo.jpeg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/><span class="title">卡通渲染</span><span class="desc">github</span></div></a><a class="site-card" href="https://github.com/you-ri/LiliumToonGraph"><div class="img"><img "" class="lazyload placeholder" data-original="https://github.com/you-ri/LiliumToonGraph/raw/master/Docs/screenshot.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="info"><img "" class="lazyload placeholder" data-original="https://sh-xcx-blog.oss-cn-shanghai.aliyuncs.com/github-logo.jpeg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/><span class="title">卡通渲染</span><span class="desc">github</span></div></a><a class="site-card" href="https://github.com/ardahamamcioglu/ToonShader_URP"><div class="img"><img "" class="lazyload placeholder" data-original="https://github.com/ardahamamcioglu/ToonShader_URP/raw/main/images/ex.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/></div><div class="info"><img "" class="lazyload placeholder" data-original="https://sh-xcx-blog.oss-cn-shanghai.aliyuncs.com/github-logo.jpeg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"/><span class="title">卡通渲染</span><span class="desc">github</span></div></a></div><h2 class="bamboo-h " id="com.unity.entities">com.unity.entities</h2><br/>]]></content>
      
      
      <categories>
          
          <category> 游戏开发 </category>
          
          <category> Unity </category>
          
          <category> Shader </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红黑树</title>
      <link href="/2021/06/30/hong-hei-shu/"/>
      <url>/2021/06/30/hong-hei-shu/</url>
      
        <content type="html"><![CDATA[<p>左旋 </p><p><img "" class="lazyload placeholder" data-original="/img/%E5%B7%A6%E6%97%8B.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="左旋"></p><p>右旋 </p><p><img "" class="lazyload placeholder" data-original="/img/%E5%8F%B3%E6%97%8B.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="右旋"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> java </category>
          
          <category> Java </category>
          
          <category> map </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> java </tag>
            
            <tag> map </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git提交出错</title>
      <link href="/2019/06/30/git-chu-shi-hua-ti-jiao-shi-bai/"/>
      <url>/2019/06/30/git-chu-shi-hua-ti-jiao-shi-bai/</url>
      
        <content type="html"><![CDATA[<p>出错的具体情况如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">D:\tool\idea\workspace\security-demo&gt;git push -u origin master</span><br><span class="line">To https://gitee.com/xingcx2019/spring-security-demo.git</span><br><span class="line"> ! [rejected]        master -&gt; master (non-fast-forward)</span><br><span class="line">error: failed to push some refs to &#x27;https://gitee.com/xingcx2019/spring-security-demo.git&#x27;</span><br><span class="line">hint: Updates were rejected because the tip of your current branch is behind</span><br><span class="line">hint: its remote counterpart. Integrate the remote changes (e.g.</span><br><span class="line">hint: &#x27;git pull ...&#x27;) before pushing again.</span><br><span class="line">hint: See the &#x27;Note about fast-forwards&#x27; in &#x27;git push --help&#x27; for details.</span><br></pre></td></tr></table></figure><p>本地创建了一个project<br>并在码云上创建了一个仓库，想要将本地的仓库链接到远程仓库<br>我用的是如下方法：<br>git init 初始化本地仓库<br>git remote add origin XXX 添加远程仓库地址<br>如果你在这之后就执行<br>git add -A，<br>git commit -m “ “<br>git push origin master,那么就会出现这个问题(被拒绝)，所以在remote add后不要着急git add，一定要git pull origin master，出现这个原因<br>是因为你在码云创建的仓库有ReadMe文件，而本地没有，造成本地和远程的不同步，<br>那么有两种方案可以解决：<br>one ：<br>本地没有ReadMe文件，那么就在本地生成一个：</p><p>git pull –rebase origin master 本地生成ReadMe文件<br>git push origin master</p><p>two：<br>那我就强制上传覆盖远程文件，<br>git push -f origin master<br>(这个命令在团队开发的时候最好不要用,否则可能会有生命危险)</p>]]></content>
      
      
      <categories>
          
          <category> 版本控制 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello world</title>
      <link href="/2019/01/20/hello-world/"/>
      <url>/2019/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
